DELIMITER //
CREATE TRIGGER Check_sponsorship_expiration_date
BEFORE INSERT ON include
FOR EACH ROW
BEGIN
DECLARE sponsorship_expire_date DATE;
SELECT expiration_date INTO sponsorship_expire_date
FROM sponsorships
WHERE sponsorshipID = NEW.sponsorshipID;
IF sponsorship_expire_date IS NOT NULL AND sponsorship_expire_date < CURDATE() 
THEN
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT = 'Cannot include an expired sponsorship';
END IF;
END //

CREATE TRIGGER Join_partner
AFTER INSERT ON include
FOR EACH ROW
BEGIN
DECLARE sponsorship_expire_date DATE;
SELECT expiration_date INTO sponsorship_expire_date
FROM sponsorships
WHERE sponsorshipID = NEW.sponsorshipID;
IF sponsorship_expire_date IS NOT NULL AND sponsorship_expire_date < CURDATE() 
THEN
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT = 'Cannot include an expired sponsorship';
END IF;
END //

CREATE TRIGGER Viewer_increase
AFTER INSERT ON periods
FOR EACH ROW
BEGIN
UPDATE videos v SET average_viewer = average_viewer + 1
WHERE v.videoID = NEW.videoID;
END //

CREATE TRIGGER Viewer_decrease
AFTER UPDATE ON periods
FOR EACH ROW
BEGIN
UPDATE videos v SET average_viewer = average_viewer - 1
WHERE v.videoID = NEW.videoID;
END //

CREATE TRIGGER Peak_viewer
AFTER UPDATE ON watch
FOR EACH ROW
BEGIN
UPDATE videos v SET peak_viewer = peak_viewer + 1
WHERE v.videoID = NEW.videoID;
END //

DELIMITER ;
